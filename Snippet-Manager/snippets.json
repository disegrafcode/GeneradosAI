[
    {
        "id": "64b4815f091a3",
        "title": "Function to copy code snippet to clipboard",
        "code": "\/\/ Function to copy code snippet to clipboard\nfunction copyToClipboard(code) {\n  const textarea = document.createElement('textarea');\n  textarea.value = code;\n  document.body.appendChild(textarea);\n  textarea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textarea);\n}"
    },
    {
        "id": "64b482c808d90",
        "title": "Add Code in Footer in wordpress",
        "code": "\/* ADD CSS IN FOOTER *\/\nadd_action('wp_footer', 'custom_code_footer');\nfunction custom_code_footer()\n{\n?>\n  <style><\/style>\n  <script><\/script>\n\n<?php\n};\n\/* ADD CSS IN FOOTER *\/"
    },
    {
        "id": "64b76ebf5c025",
        "title": "Allow To Upload Diferent Types Of Files",
        "code": "\/* ALLOW TO UPLOAD DIFERENT TYPES OF FILES *\/\nadd_filter('wp_check_filetype_and_ext', function ($data, $file, $filename, $mimes) {\n  $filetype = wp_check_filetype($filename, $mimes);\n  return [\n    'ext'             => $filetype['ext'],\n    'type'            => $filetype['type'],\n    'proper_filename' => $data['proper_filename']\n  ];\n}, 10, 4);\n\nfunction cc_mime_types($mimes)\n{\n  $mimes['svg'] = 'image\/svg+xml';\n  return $mimes;\n}\nadd_filter('upload_mimes', 'cc_mime_types');\n\nfunction fix_svg()\n{\n  echo '<style type=\"text\/css\">\n          .attachment-266x266, .thumbnail img {\n               width: 100% !important;\n               height: auto !important;\n          }\n          <\/style>';\n}\nadd_action('admin_head', 'fix_svg');\n\/* ALLOW TO UPLOAD DIFERENT TYPES OF FILES *\/"
    },
    {
        "id": "64b9fa574f79c",
        "title": "Adding custom Javascript and Css in wordpress",
        "code": "function my_awesome_theme_enqueue_scripts() {\n    \/\/ Enqueue Bootstrap CSS\n    wp_enqueue_style('bootstrap', get_template_directory_uri() . '\/assets\/bootstrap\/css\/bootstrap.min.css');\n\n    \/\/ Enqueue Bootstrap JS\n    wp_enqueue_script('bootstrap', get_template_directory_uri() . '\/assets\/bootstrap\/js\/bootstrap.min.js', array('jquery'), '4.5.3', true);\n}\n\nadd_action('wp_enqueue_scripts', 'my_awesome_theme_enqueue_scripts')"
    },
    {
        "id": "64bc083188cbc",
        "title": "Custom Metabox Complete",
        "code": "\/* CUSTOM METABOX  *\/\n\/\/ Add a custom metabox to the post edit screen\nfunction custom_metabox_callback($post)\n{\n    \/\/ Retrieve existing values from the database\n    $custom_text = get_post_meta($post->ID, '_custom_text', true);\n    $custom_select = get_post_meta($post->ID, '_custom_select', true);\n    $custom_radio = get_post_meta($post->ID, '_custom_radio', true);\n    $custom_description = get_post_meta($post->ID, '_custom_description', true);\n    $custom_image = get_post_meta($post->ID, '_custom_image', true);\n\n    \/\/ Nonce to verify the data came from the correct form\n    wp_nonce_field('custom_metabox_nonce', 'custom_metabox_nonce');\n\n    \/\/ Output the metabox fields\n    ?>\n        <fieldset class=\"group\" data-id=\"group1\">\n            <legend class=\"toggle\">Group 1<\/legend>\n            <div class=\"group-content\">\n                <label for=\"custom-text\">Custom Text:<\/label>\n                <input type=\"text\" id=\"custom-text\" name=\"custom_text\" value=\"<?php echo esc_attr($custom_text); ?>\" \/>\n                <br \/>\n\n                <label for=\"custom-select\">Custom Select:<\/label>\n                <select id=\"custom-select\" name=\"custom_select\">\n                    <option value=\"option1\" <?php selected($custom_select, 'option1'); ?>>Option 1<\/option>\n                    <option value=\"option2\" <?php selected($custom_select, 'option2'); ?>>Option 2<\/option>\n                    <option value=\"option3\" <?php selected($custom_select, 'option3'); ?>>Option 3<\/option>\n                <\/select>\n            <\/div>\n        <\/fieldset>\n\n        <fieldset class=\"group\" data-id=\"group2\">\n            <legend class=\"toggle\">Group 2<\/legend>\n            <div class=\"group-content\">\n                <label>Custom Radio:<\/label>\n                <input type=\"radio\" id=\"custom-radio1\" name=\"custom_radio\" value=\"radio1\" <?php checked($custom_radio, 'radio1'); ?> \/>\n                <label for=\"custom-radio1\">Radio 1<\/label>\n                <input type=\"radio\" id=\"custom-radio2\" name=\"custom_radio\" value=\"radio2\" <?php checked($custom_radio, 'radio2'); ?> \/>\n                <label for=\"custom-radio2\">Radio 2<\/label>\n            <\/div>\n        <\/fieldset>\n\n        <fieldset class=\"group\" data-id=\"group3\">\n            <legend class=\"toggle\">Group 3<\/legend>\n            <div class=\"group-content\">\n                <label>Custom Description:<\/label>\n                <textarea id=\"custom_description\" name=\"custom_description\" style=\"width: 100%;\"><?php echo wp_kses_post($custom_description); ?><\/textarea>\n                <script>\n                    jQuery(document).ready(function($) {\n                        let editor = null;\n                        \/\/ Function to initialize the editor\n                        function initEditor() {\n                            if (editor === null) {\n                                editor = wp.editor.initialize('custom_description', {\n                                    tinymce: {\n                                        wpautop: true,\n                                        plugins: 'charmap colorpicker lists media paste tabfocus textcolor',\n                                        toolbar1: 'bold italic underline | alignleft aligncenter alignright | bullist numlist outdent indent | link unlink | charmap | forecolor backcolor',\n                                    },\n                                    quicktags: true,\n                                    mediaButtons: true,\n                                });\n                            }\n                        }\n                        setTimeout(function() { initEditor();}, 800);});\n                <\/script>\n                <br \/>\n\n                <label for=\"custom-image\">Custom Image:<\/label>\n                <input type=\"text\" id=\"custom-image\" name=\"custom_image\" value=\"<?php echo esc_attr($custom_image); ?>\" \/>\n                <input type=\"button\" id=\"upload-button\" class=\"button\" value=\"Upload Image\" \/> <br \/>\n                <div id=\"image-preview\"> <\/div>\n            <\/div>\n        <\/fieldset>\n\n        <script>\n            jQuery(document).ready(function($) {\n                $('.toggle').click(function() {\n                    $(this).siblings('.group-content').slideToggle();\n                });\n            });\n        <\/script>\n\n        <script>\n            \/\/ JavaScript for Opening WordPress Media Library\n            jQuery(document).ready(function($) {\n                $('#upload-button').click(function(e) {\n                    e.preventDefault();\n\n                    \/\/ Create a media frame\n                    let frame = wp.media({\n                        title: 'Select Image',\n                        multiple: false, \/\/ Set to true for multiple image selection\n                        library: {\n                            type: 'image'\n                        }\n                    });\n\n                    \/\/ Handle image selection\n                    frame.on('select', function() {\n                        let attachment = frame.state().get('selection').first().toJSON();\n                        $('#custom-image').val(attachment.url);\n\n                        \/\/ Display image preview\n                        $('#image-preview').html('<img src=\"' + attachment.url + '\" alt=\"Image Preview\" \/>');\n                    });\n\n                    \/\/ Open the media library\n                    frame.open();\n                });\n            });\n        <\/script>\n        \n        <style>\n            \/* CSS Styles for the Collapsible Groups *\/\n            .group {\n                border: 1px solid #ddd;\n                border-radius: 4px;\n                margin-bottom: 10px;\n                padding: 10px;\n                background-color: #f9f9f9;\n            }\n\n            .toggle {\n                cursor: pointer;\n                font-weight: bold;\n                margin-bottom: 5px;\n            }\n\n            .group-content {\n                display: block;\n                \/* Set the default display state to \"block\" *\/\n            }\n\n            .image-preview {\n                margin-top: 10px;\n                max-width: 200px;\n                max-height: 200px;\n            }\n\n            .image-preview img {\n                width: 100%;\n                height: auto;\n                display: block;\n                border: 1px solid #ddd;\n                border-radius: 4px;\n            }\n        <\/style>\n    <?php\n}\n\n\/\/ Save custom metabox data\nfunction save_custom_metabox_data($post_id)\n{\n    \/\/ Verify the nonce before proceeding\n    if (!isset($_POST['custom_metabox_nonce']) || !wp_verify_nonce($_POST['custom_metabox_nonce'], 'custom_metabox_nonce')) {\n        return;\n    }\n\n    \/\/ Save custom text field\n    if (isset($_POST['custom_text'])) {\n        update_post_meta($post_id, '_custom_text', sanitize_text_field($_POST['custom_text']));\n    }\n\n    \/\/ Save custom select field\n    if (isset($_POST['custom_select'])) {\n        update_post_meta($post_id, '_custom_select', sanitize_text_field($_POST['custom_select']));\n    }\n\n    \/\/ Save custom radio field\n    if (isset($_POST['custom_radio'])) {\n        update_post_meta($post_id, '_custom_radio', sanitize_text_field($_POST['custom_radio']));\n    }\n\n    \/\/ Save custom description field\n    if (isset($_POST['custom_description'])) {\n        update_post_meta($post_id, '_custom_description', wp_kses_post($_POST['custom_description']));\n    }\n\n    \/\/ Save custom image field\n    if (isset($_POST['custom_image'])) {\n        update_post_meta($post_id, '_custom_image', sanitize_text_field($_POST['custom_image']));\n    }\n}\n\n\/\/ Add the custom metabox to the post edit screen\nfunction add_custom_metabox()\n{\n    add_meta_box(\n        'custom-metabox',\n        'Custom Metabox',\n        'custom_metabox_callback',\n        'post', \/\/ Change 'post' to 'page' for pages\n        'normal', \/\/ Metabox position: 'normal', 'advanced', or 'side'\n        'default' \/\/ Metabox priority: 'default', 'high', 'low', or 'core'\n    );\n}\nadd_action('add_meta_boxes', 'add_custom_metabox');\n\n\/\/ Save the custom metabox data when the post is saved or updated\nadd_action('save_post', 'save_custom_metabox_data');\n\n\/* CUSTOM METABOX  *\/"
    },
    {
        "id": "64c457348dbbc",
        "title": "Captcha Mejorado",
        "code": "<?php\n\/\/ Start the session to access the CAPTCHA code stored in it\nsession_start();\n\n\/\/ Set the content type header to display the image\nheader('Content-Type: image\/png');\n\n\/\/ Create a blank image with the specified width and height\n$image_width = 200;\n$image_height = 60;\n$image = imagecreatetruecolor($image_width, $image_height);\n\n\/\/ Generate a blue background color for the image (light blue)\n$background_color = imagecolorallocate($image, 0, 220, 230);\nimagefill($image, 0, 0, $background_color);\n\n\/\/ Generate random light blue streaks for background noise\n$streak_color = imagecolorallocate($image, 220, 240, 250);\nfor ($i = 0; $i < 30; $i++) { \/\/ Increase the number of streaks\n    imageline($image, rand(0, $image_width), rand(0, $image_height), rand(0, $image_width), rand(0, $image_height), $streak_color);\n}\n\n\/\/ Generate the CAPTCHA code using random numbers\n$captcha_code = '';\nfor ($i = 0; $i < 5; $i++) {\n    $captcha_code .= mt_rand(0, 9);\n}\n\n\/\/ Store the CAPTCHA code in the session\n$_SESSION['captcha_code'] = $captcha_code;\n\n\/\/ Add the numbers to the image (spread-out)\n$text_color = imagecolorallocate($image, 30, 60, 90);\n$text_x = 20;\n$text_y = $image_height \/ 2 + 5; \/\/ Adjust the vertical position to center the numbers\n\n\/\/ Use Google font for the captcha numbers (adjust the font file name accordingly)\n$font_file = 'RobotoSlab-SemiBold.ttf'; \/\/ Replace with the actual font file name\n\nfor ($i = 0; $i < 5; $i++) {\n    $angle = mt_rand(-30, 30); \/\/ Increase the angle range\n    $font_size = mt_rand(16, 20); \/\/ Randomize the font size between 16 and 20\n    imagettftext($image, $font_size, $angle, $text_x, $text_y, $text_color, $font_file, $captcha_code[$i]);\n    $text_x += mt_rand(30, 40); \/\/ Increase the spread-out distance between numbers\n}\n\n\/\/ Add random dots to the image for more noise\nfor ($i = 0; $i < 1000; $i++) { \/\/ Increase the number of dots\n    $dot_color = imagecolorallocate($image, rand(0, 255), rand(0, 255), rand(0, 255));\n    imagesetpixel($image, rand(0, $image_width), rand(0, $image_height), $dot_color);\n}\n\n\/\/ Output the image as PNG\nimagepng($image);\n\n\/\/ Destroy the image to free up memory\nimagedestroy($image);\n"
    },
    {
        "id": "64c4576adf266",
        "title": "create page if not exist Wordpress",
        "code": "function create_login_new_app_page() {\n    $login_new_app_slug = 'applogin';\n    $login_new_app_title = 'App Login';\n\n    $page = get_page_by_path($login_new_app_slug);\n\n    if (!$page) {\n        \/\/ Page does not exist, create it\n        $page_data = array(\n            'post_title'    => wp_strip_all_tags($login_new_app_title),\n            'post_name'     => $login_new_app_slug,\n            'post_content'  => '',\n            'post_status'   => 'publish',\n            'post_type'     => 'page',\n        );\n\n        \/\/ Insert the page into the database\n        wp_insert_post($page_data);\n    }\n}\nadd_action('init', 'create_login_new_app_page');"
    },
    {
        "id": "64c457f80674f",
        "title": "Acceder a las variables de session wordpress",
        "code": "\/\/ acceder a las variables de session\nfunction custom_start_session() {\n    if (!session_id()) {\n        session_start();\n    }\n}\nadd_action('init', 'custom_start_session', 1);\n\/\/ acceder a las variables de session\n\n\/\/ dentro de una funcion\ncustom_start_session();\n\/\/ dentro de una funcion"
    },
    {
        "id": "64c486b2eceac",
        "title": "change wordpress login and url",
        "code": "\/* CHANGE WORDPRESS LOGIN FORM *\/\n\/\/ CREATE PAGE IF IT DOESN'T EXIST\nfunction create_login_new_app_page()\n{\n    $login_new_app_slug = 'applogin';\n    $login_new_app_title = 'App Login';\n\n    $page = get_page_by_path($login_new_app_slug);\n\n    if (!$page) {\n        \/\/ Page does not exist, create it\n        $page_data = array(\n            'post_title'    => wp_strip_all_tags($login_new_app_title),\n            'post_name'     => $login_new_app_slug,\n            'post_content'  => '',\n            'post_status'   => 'publish',\n            'post_type'     => 'page',\n        );\n\n        \/\/ Insert the page into the database\n        wp_insert_post($page_data);\n    }\n}\nadd_action('init', 'create_login_new_app_page');\n\n\/\/ acceder a las variables de session\nfunction custom_start_session() {\n    if (!session_id()) {\n        session_start();\n    }\n}\nadd_action('init', 'custom_start_session', 1);\n\/\/ acceder a las variables de session\n\n\/\/ADDING THE LOGIN FORM\nfunction custom_applogin_template()\n{\n    if (is_page('applogin')) {\n\n        if (is_user_logged_in()) {\n            wp_redirect(admin_url());\n            exit;\n        }\n        if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n            \/\/ Verify the CAPTCHA code\n            custom_start_session();\n            if (!empty($_POST['captcha']) && $_POST['captcha'] === $_SESSION['captcha_code']) {\n                \/\/ CAPTCHA code is correct, proceed with login\n                $user_login = wp_strip_all_tags($_POST['log']);\n                $user_password = $_POST['pwd'];\n                $user_rememberme =  $_POST['rememberme'];\n                $credentials = array(\n                    'user_login' => $user_login,\n                    'user_password' => $user_password,\n                    'remember' => $user_rememberme\n                );\n\n                $user = wp_signon($credentials, false);\n                \n                if (is_wp_error($user)) {\n                    \/\/ Login failed, redirect with login error\n                    $error_message = 'Invalid username or password.';\n                    echo '<div class=\"login-error\">' . $error_message . '<\/div>';\n                } else {\n                    \/\/ Login successful, redirect to the wp-admin dashboard\n                    wp_redirect(admin_url());\n                    exit();\n                }\n            } else {\n                \/\/ CAPTCHA code is incorrect, display error message\n                $error_message = 'Invalid CAPTCHA code. Please try again.';\n                echo '<div class=\"login-error\">' . $error_message . '<\/div>';\n            }\n        }\n\n        echo '<div class=\"login-form-container\">';\n        echo '<form action=\"' . esc_url(home_url('\/applogin\/', 'login_post')) . '\" method=\"post\">';\n        echo '<label for=\"user_login\">Username<\/label>';\n        echo '<input type=\"text\" name=\"log\" class=\"input\" value=\"\" size=\"20\" \/>';\n        echo '<label for=\"user_pass\">Password<\/label>';\n        echo '<input type=\"password\" name=\"pwd\" id=\"user_pass\" class=\"input\" value=\"\" size=\"20\" \/>';\n        echo '<img src=\"'.get_template_directory_uri().'\/captcha-image.php\" alt=\"CAPTCHA Image\">';\n        echo '<input type=\"text\" class=\"input\" name=\"captcha\" id=\"captcha\" required>';\n        echo '<input type=\"hidden\" value=\"false\" name=\"rememberme\">';\n        echo '<div class=\"checkboxContainer\">';                 \n        echo '<label for=\"rememberme\">Remember Me<\/label>';\n        echo '<input type=\"checkbox\" name=\"rememberme\" value=\"true\"\/>'; \n        echo '<\/div>';\n        echo '<input type=\"submit\" name=\"wp-submit\" id=\"wp-submit\" class=\"button button-primary\" value=\"Log In\" \/>';\n        echo '<a href=\"' . esc_url(wp_lostpassword_url()) . '\">Lost your password?<\/a>';\n        wp_nonce_field('log-in', 'login-form');\n        echo '<\/form>';\n        echo '<\/div>';\n\n        ?>\n        <style>\n            body,html\n            {\n                font-family: Arial, Helvetica, sans-serif;\n                color: #434343;\n                font-size: 12px;\n            }\n            \/* Custom styles for the login form *\/\n            .login-form-container {\n            max-width: 300px;\n            margin: 0 auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            border-radius: 5px;\n            background-color: #f9f9f9;\n            margin-top: 50px;\n            }\n            .login-error\n            {\n                max-width: 315px;\n                margin: 0 auto;\n                padding: 15px;\n                border: 1px solid #c36565;\n                border-radius: 5px;\n                background-color: #ffdcdc;\n                margin-bottom: 20px;\n                color: #830000;\n            }\n\n            .login-form-container form {\n            display: flex;\n            flex-direction: column;\n            }\n\n            .login-form-container label {\n            margin-bottom: 5px;\n            font-weight: bold;\n            }\n\n            .login-form-container .input {\n            padding: 10px;\n            margin-bottom: 10px;\n            border: 1px solid #ccc;\n            border-radius: 3px;\n            }\n\n            .login-form-container img {\n            margin-bottom: 0;\n            }\n\n            \/* Custom style for the checkbox container *\/\n            .login-form-container .remember-me-container {\n            display: flex;\n            align-items: center;\n            margin-bottom: 10px;\n            }\n\n            \/* Custom style for the checkbox input *\/\n            .login-form-container .remember-me-container input[type=\"checkbox\"] {\n            margin-right: 5px;\n            appearance: none;\n            -webkit-appearance: none;\n            width: 18px;\n            height: 18px;\n            border: 1px solid #ccc;\n            border-radius: 3px;\n            position: relative;\n            cursor: pointer;\n            }\n            .login-form-container .button {\n            padding: 10px;\n            background-color: #0073aa;\n            color: #fff;\n            border: none;\n            border-radius: 3px;\n            cursor: pointer;\n            margin-bottom: 20px;\n            text-align: center;\n            }\n\n            .login-form-container .button:hover {\n            background-color: #005980;\n            }\n\n            .login-form-container .login-error {\n            color: red;\n            margin-bottom: 10px;\n            }\n\n            .checkboxContainer\n            {\n                margin-bottom: 15px;\n            }\n        <\/style>\n        <?php\n\n        \/\/ Prevent other templates from loading\n        exit;\n    }\n}\nadd_action('template_redirect', 'custom_applogin_template');\n\/\/ADDING THE LOGIN FORM\n\n\/\/REDIRECT AFTER LOGOUT\nfunction redirect_after_logout() {\n    wp_redirect(home_url());\n    exit;\n}\nadd_action('wp_logout', 'redirect_after_logout');\n\/\/REDIRECT AFTER LOGOUT\n\n\/\/CLOSE SESSION IF ENTER TO WP-LOGIN.PHP AND REDIRECT TO HOME PAGE\nfunction logout_and_redirect_on_login() {\n    \/\/ Check if the request is for the wp-login.php page\n    if (strpos($_SERVER['REQUEST_URI'], '\/wp-login.php') !== false) {\n        \/\/ Check if the user is logged in\n        if (is_user_logged_in()) {\n            \/\/ Log out the user\n            wp_logout();\n        }\n\n        \/\/ Redirect to the home page\n        wp_redirect(home_url());\n        exit;\n    }\n}\nadd_action('login_init', 'logout_and_redirect_on_login');\n\/\/CLOSE SESSION IF ENTER TO WP-LOGIN.PHP AND REDIRECT TO HOME PAGE\n\/* CHANGE WORDPRESS LOGIN FORM *\/"
    }
]