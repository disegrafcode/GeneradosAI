[
    {
        "id": "64b4815f091a3",
        "title": "Function to copy code snippet to clipboard",
        "code": "\/\/ Function to copy code snippet to clipboard\nfunction copyToClipboard(code) {\n  const textarea = document.createElement('textarea');\n  textarea.value = code;\n  document.body.appendChild(textarea);\n  textarea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textarea);\n}"
    },
    {
        "id": "64b482c808d90",
        "title": "Add Code in Footer in wordpress",
        "code": "\/* ADD CSS IN FOOTER *\/\nadd_action('wp_footer', 'custom_code_footer');\nfunction custom_code_footer()\n{\n?>\n  <style><\/style>\n  <script><\/script>\n\n<?php\n};\n\/* ADD CSS IN FOOTER *\/"
    },
    {
        "id": "64b76ebf5c025",
        "title": "Allow To Upload Diferent Types Of Files",
        "code": "\/* ALLOW TO UPLOAD DIFERENT TYPES OF FILES *\/\nadd_filter('wp_check_filetype_and_ext', function ($data, $file, $filename, $mimes) {\n  $filetype = wp_check_filetype($filename, $mimes);\n  return [\n    'ext'             => $filetype['ext'],\n    'type'            => $filetype['type'],\n    'proper_filename' => $data['proper_filename']\n  ];\n}, 10, 4);\n\nfunction cc_mime_types($mimes)\n{\n  $mimes['svg'] = 'image\/svg+xml';\n  return $mimes;\n}\nadd_filter('upload_mimes', 'cc_mime_types');\n\nfunction fix_svg()\n{\n  echo '<style type=\"text\/css\">\n          .attachment-266x266, .thumbnail img {\n               width: 100% !important;\n               height: auto !important;\n          }\n          <\/style>';\n}\nadd_action('admin_head', 'fix_svg');\n\/* ALLOW TO UPLOAD DIFERENT TYPES OF FILES *\/"
    },
    {
        "id": "64b9fa574f79c",
        "title": "Adding custom Javascript and Css in wordpress",
        "code": "function my_awesome_theme_enqueue_scripts() {\n    \/\/ Enqueue Bootstrap CSS\n    wp_enqueue_style('bootstrap', get_template_directory_uri() . '\/assets\/bootstrap\/css\/bootstrap.min.css');\n\n    \/\/ Enqueue Bootstrap JS\n    wp_enqueue_script('bootstrap', get_template_directory_uri() . '\/assets\/bootstrap\/js\/bootstrap.min.js', array('jquery'), '4.5.3', true);\n}\n\nadd_action('wp_enqueue_scripts', 'my_awesome_theme_enqueue_scripts')"
    },
    {
        "id": "64bc083188cbc",
        "title": "Custom Metabox Complete",
        "code": "\/* CUSTOM METABOX  *\/\n\/\/ Add a custom metabox to the post edit screen\nfunction custom_metabox_callback($post)\n{\n    \/\/ Retrieve existing values from the database\n    $custom_text = get_post_meta($post->ID, '_custom_text', true);\n    $custom_select = get_post_meta($post->ID, '_custom_select', true);\n    $custom_radio = get_post_meta($post->ID, '_custom_radio', true);\n    $custom_description = get_post_meta($post->ID, '_custom_description', true);\n    $custom_image = get_post_meta($post->ID, '_custom_image', true);\n\n    \/\/ Nonce to verify the data came from the correct form\n    wp_nonce_field('custom_metabox_nonce', 'custom_metabox_nonce');\n\n    \/\/ Output the metabox fields\n    ?>\n        <fieldset class=\"group\" data-id=\"group1\">\n            <legend class=\"toggle\">Group 1<\/legend>\n            <div class=\"group-content\">\n                <label for=\"custom-text\">Custom Text:<\/label>\n                <input type=\"text\" id=\"custom-text\" name=\"custom_text\" value=\"<?php echo esc_attr($custom_text); ?>\" \/>\n                <br \/>\n\n                <label for=\"custom-select\">Custom Select:<\/label>\n                <select id=\"custom-select\" name=\"custom_select\">\n                    <option value=\"option1\" <?php selected($custom_select, 'option1'); ?>>Option 1<\/option>\n                    <option value=\"option2\" <?php selected($custom_select, 'option2'); ?>>Option 2<\/option>\n                    <option value=\"option3\" <?php selected($custom_select, 'option3'); ?>>Option 3<\/option>\n                <\/select>\n            <\/div>\n        <\/fieldset>\n\n        <fieldset class=\"group\" data-id=\"group2\">\n            <legend class=\"toggle\">Group 2<\/legend>\n            <div class=\"group-content\">\n                <label>Custom Radio:<\/label>\n                <input type=\"radio\" id=\"custom-radio1\" name=\"custom_radio\" value=\"radio1\" <?php checked($custom_radio, 'radio1'); ?> \/>\n                <label for=\"custom-radio1\">Radio 1<\/label>\n                <input type=\"radio\" id=\"custom-radio2\" name=\"custom_radio\" value=\"radio2\" <?php checked($custom_radio, 'radio2'); ?> \/>\n                <label for=\"custom-radio2\">Radio 2<\/label>\n            <\/div>\n        <\/fieldset>\n\n        <fieldset class=\"group\" data-id=\"group3\">\n            <legend class=\"toggle\">Group 3<\/legend>\n            <div class=\"group-content\">\n                <label>Custom Description:<\/label>\n                <textarea id=\"custom_description\" name=\"custom_description\" style=\"width: 100%;\"><?php echo wp_kses_post($custom_description); ?><\/textarea>\n                <script>\n                    jQuery(document).ready(function($) {\n                        let editor = null;\n                        \/\/ Function to initialize the editor\n                        function initEditor() {\n                            if (editor === null) {\n                                editor = wp.editor.initialize('custom_description', {\n                                    tinymce: {\n                                        wpautop: true,\n                                        plugins: 'charmap colorpicker lists media paste tabfocus textcolor',\n                                        toolbar1: 'bold italic underline | alignleft aligncenter alignright | bullist numlist outdent indent | link unlink | charmap | forecolor backcolor',\n                                    },\n                                    quicktags: true,\n                                    mediaButtons: true,\n                                });\n                            }\n                        }\n                        setTimeout(function() { initEditor();}, 800);});\n                <\/script>\n                <br \/>\n\n                <label for=\"custom-image\">Custom Image:<\/label>\n                <input type=\"text\" id=\"custom-image\" name=\"custom_image\" value=\"<?php echo esc_attr($custom_image); ?>\" \/>\n                <input type=\"button\" id=\"upload-button\" class=\"button\" value=\"Upload Image\" \/> <br \/>\n                <div id=\"image-preview\"> <\/div>\n            <\/div>\n        <\/fieldset>\n\n        <script>\n            jQuery(document).ready(function($) {\n                $('.toggle').click(function() {\n                    $(this).siblings('.group-content').slideToggle();\n                });\n            });\n        <\/script>\n\n        <script>\n            \/\/ JavaScript for Opening WordPress Media Library\n            jQuery(document).ready(function($) {\n                $('#upload-button').click(function(e) {\n                    e.preventDefault();\n\n                    \/\/ Create a media frame\n                    let frame = wp.media({\n                        title: 'Select Image',\n                        multiple: false, \/\/ Set to true for multiple image selection\n                        library: {\n                            type: 'image'\n                        }\n                    });\n\n                    \/\/ Handle image selection\n                    frame.on('select', function() {\n                        let attachment = frame.state().get('selection').first().toJSON();\n                        $('#custom-image').val(attachment.url);\n\n                        \/\/ Display image preview\n                        $('#image-preview').html('<img src=\"' + attachment.url + '\" alt=\"Image Preview\" \/>');\n                    });\n\n                    \/\/ Open the media library\n                    frame.open();\n                });\n            });\n        <\/script>\n        \n        <style>\n            \/* CSS Styles for the Collapsible Groups *\/\n            .group {\n                border: 1px solid #ddd;\n                border-radius: 4px;\n                margin-bottom: 10px;\n                padding: 10px;\n                background-color: #f9f9f9;\n            }\n\n            .toggle {\n                cursor: pointer;\n                font-weight: bold;\n                margin-bottom: 5px;\n            }\n\n            .group-content {\n                display: block;\n                \/* Set the default display state to \"block\" *\/\n            }\n\n            .image-preview {\n                margin-top: 10px;\n                max-width: 200px;\n                max-height: 200px;\n            }\n\n            .image-preview img {\n                width: 100%;\n                height: auto;\n                display: block;\n                border: 1px solid #ddd;\n                border-radius: 4px;\n            }\n        <\/style>\n    <?php\n}\n\n\/\/ Save custom metabox data\nfunction save_custom_metabox_data($post_id)\n{\n    \/\/ Verify the nonce before proceeding\n    if (!isset($_POST['custom_metabox_nonce']) || !wp_verify_nonce($_POST['custom_metabox_nonce'], 'custom_metabox_nonce')) {\n        return;\n    }\n\n    \/\/ Save custom text field\n    if (isset($_POST['custom_text'])) {\n        update_post_meta($post_id, '_custom_text', sanitize_text_field($_POST['custom_text']));\n    }\n\n    \/\/ Save custom select field\n    if (isset($_POST['custom_select'])) {\n        update_post_meta($post_id, '_custom_select', sanitize_text_field($_POST['custom_select']));\n    }\n\n    \/\/ Save custom radio field\n    if (isset($_POST['custom_radio'])) {\n        update_post_meta($post_id, '_custom_radio', sanitize_text_field($_POST['custom_radio']));\n    }\n\n    \/\/ Save custom description field\n    if (isset($_POST['custom_description'])) {\n        update_post_meta($post_id, '_custom_description', wp_kses_post($_POST['custom_description']));\n    }\n\n    \/\/ Save custom image field\n    if (isset($_POST['custom_image'])) {\n        update_post_meta($post_id, '_custom_image', sanitize_text_field($_POST['custom_image']));\n    }\n}\n\n\/\/ Add the custom metabox to the post edit screen\nfunction add_custom_metabox()\n{\n    add_meta_box(\n        'custom-metabox',\n        'Custom Metabox',\n        'custom_metabox_callback',\n        'post', \/\/ Change 'post' to 'page' for pages\n        'normal', \/\/ Metabox position: 'normal', 'advanced', or 'side'\n        'default' \/\/ Metabox priority: 'default', 'high', 'low', or 'core'\n    );\n}\nadd_action('add_meta_boxes', 'add_custom_metabox');\n\n\/\/ Save the custom metabox data when the post is saved or updated\nadd_action('save_post', 'save_custom_metabox_data');\n\n\/* CUSTOM METABOX  *\/"
    }
]